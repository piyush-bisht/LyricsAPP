{"version":3,"sources":["components/layouts/spinner.gif","components/layouts/navbar.js","context.js","components/layouts/spinner.js","components/tracks/track.js","components/tracks/Tracks.js","components/layouts/search.js","components/layouts/Index.js","components/tracks/lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Context","React","createContext","Provider","state","track_list","heading","dispatch","trackList","head","setState","axios","get","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","track_name","artist_name","album_name","to","track_id","Tracks","undefined","length","Fragment","map","item","key","Search","trackTitle","e","target","type","name","aria-label","aria-describedby","placeholder","onChange","bind","Index","Lyrics","lyrics","id","match","params","Object","keys","lyrics_body","explicit","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.90517ccd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.61c188cc.gif\";"," import React from 'react';\r\n const Navbar = ()=>{\r\n     return(\r\n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n        </nav>\r\n     )\r\n }\r\n\r\n export default Navbar;"," import React, { Component } from 'react';\r\n import axios from 'axios';\r\n const Context=React.createContext();\r\n export  class Provider extends Component {\r\n     state={\r\n         track_list:[],\r\n            heading:\"Top 10 tracks\",\r\n            dispatch:(trackList,head)=>{\r\n \r\n                    this.setState({track_list:trackList,heading:head})\r\n            }\r\n     }\r\n     componentDidMount(){\r\n        axios.get(\r\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1&apikey=8b2beb6a0ccab321687912d41b951668`\r\n      )\r\n      .then(res => {\r\n         //console.log(res.data.message.body);\r\n         this.setState({track_list:res.data.message.body.track_list});\r\n        \r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n\r\n\r\n     }\r\n     render() {\r\n        return (\r\n            <Context.Provider value={this.state}>     \r\n                {this.props.children}\r\n            </Context.Provider> \r\n        )\r\n     }\r\n }\r\n\r\n export const Consumer=Context.Consumer;\r\n  \r\n ","import React from 'react'\r\nimport spinner from './spinner.gif'\r\nconst Spinner= () =>{\r\n    return (\r\n        <div>\r\n          <img\r\n        src={spinner}\r\n        alt=\"Loading...\"\r\n        style={{ width: '200px', margin: ' 40px auto', display: 'block' }}\r\n      />\r\n        </div>\r\n    )\r\n}\r\nexport default Spinner;\r\n","import React from 'react'\r\nimport {Link } from 'react-router-dom';\r\nconst Track=(props) =>{\r\n    const {track }=props;\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <h4>{track.track_name}</h4>\r\n                    <br/>\r\n                    <p className=\"card-text\">\r\n                        <i className=\"fas fa-music\"></i> {track.artist_name}\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                        Album:{track.album_name}\r\n                    </p>\r\n                    <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n                    View Lyrics    \r\n                    </Link>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport {Consumer }from \"../../context\";\r\nimport Spinner from \"../layouts/spinner\";\r\nimport Track from \"../tracks/track\";\r\n\r\nclass Tracks extends React.Component{\r\n    render(){\r\n        return(\r\n            <Consumer>\r\n                {\r\n                    value=>{\r\n                        const {track_list,heading}=value;\r\n                        //console.log(value);\r\n                        if(track_list===undefined||track_list.length===0){\r\n                            return(<Spinner/>)\r\n                        }\r\n                        else{\r\n                            return (\r\n                                <React.Fragment>\r\n                                    <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                                    <div className=\"row\">\r\n                                        {track_list.map((item)=>(\r\n                                            <Track key={item.track.track_id} track={item.track}/>\r\n                                        ))}\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            );\r\n                        }\r\n                    }\r\n                } \r\n            </Consumer>   \r\n        );\r\n    }\r\n}\r\nexport default Tracks;","import React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { Consumer } from \"../../context\";\r\nclass Search extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.onChange=this.onChange.bind(this);\r\n    // }\r\n    state={\r\n        trackTitle:''\r\n    }\r\n    \r\n    onChange(dispatch,e){\r\n        this.setState({trackTitle:e.target.value});\r\n        let head;\r\n        if(e.target.value===\"\"){\r\n            head=\"Top 10 Tracks\"\r\n            axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=in&f_has_lyrics=1&apikey=8b2beb6a0ccab321687912d41b951668`)\r\n            .then(res=>{\r\n                console.log(res.data);\r\n                dispatch(res.data.message.body.track_list,head);\r\n                \r\n            })\r\n\r\n        }\r\n        else{\r\n            head=\"Search Result\"\r\n            axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q=${this.state.trackTitle}&page_size=10&s_track_rating=desc&apikey=8b2beb6a0ccab321687912d41b951668`)\r\n        .then(res=>{\r\n            console.log(res.data);\r\n            dispatch(res.data.message.body.track_list,head);\r\n            \r\n        \r\n        }\r\n        )\r\n        \r\n\r\n        }\r\n\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n               {    \r\n                   (value=>{\r\n                    const {dispatch}=value;\r\n                       return(\r\n                        \r\n                        <div className=\"card card-body mb-4 p-4\">\r\n                            <h1 className=\"display-4 text-center\">\r\n                                Search For a Song\r\n                            </h1>\r\n                            <p className=\"lead text-center\">\r\n                                Get the Lyrics\r\n    \r\n                            </p>\r\n                        <div className=\"form-group input-group-sm mb-3\">\r\n                            <input type=\"text\" name=\"trackTitle\" className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Search any track\" onChange={this.onChange.bind(this,dispatch)}/>\r\n                        </div> \r\n                        \r\n                    </div>\r\n    \r\n    \r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n                        \r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Search;","import React from \"react\";\r\nimport Tracks from \"../tracks/Tracks\"\r\nimport Search from \"../layouts/search\";\r\nconst Index=()=>{\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Search/>\r\n            <Tracks/>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Index;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Spinner from \"../layouts/spinner\";\r\nimport {Link}  from 'react-router-dom';\r\n\r\nclass Lyrics extends Component {\r\n    state={\r\n        track:{},\r\n        lyrics:{}\r\n    };\r\n  \r\n    componentDidMount(){\r\n        var id=this.props.match.params.id;\r\n            axios.get(\r\n                `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${id}&apikey=8b2beb6a0ccab321687912d41b951668`\r\n              )\r\n              .then(res => {\r\n                 this.setState({lyrics:res.data.message.body.lyrics});\r\n                 return axios.get(`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.get?track_id=${id}&apikey=8b2beb6a0ccab321687912d41b951668`) \r\n              })\r\n              .then(res=>{\r\n                  console.log(res.data);\r\n                  this.setState({track:res.data.message.body.track})\r\n              })\r\n              .catch(err => console.log(err));   \r\n    }\r\n\r\n    render() {\r\n        const {track,lyrics} =this.state;\r\n        //console.log(this.state.lyrics);\r\n        if(track===undefined||lyrics===undefined||Object.keys(lyrics).length===0||Object.keys(track).length===0)\r\n        {\r\n            return(<Spinner/>);\r\n        }\r\n        else{\r\n            return (<React.Fragment>\r\n                <div className=\"card\">\r\n                    <h4 className=\"card-header\">{track.track_name} - <span className=\"text-secondary\">{track.artist_name}</span></h4>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{this.state.lyrics.lyrics_body}</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n                <ul className=\"list-group mt-3\">\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Album</strong>:{track.album_name}\r\n                    </li>\r\n                    {/* <li className=\"list-group-item\">\r\n                        <strong>Genre</strong>:{track.primary_genres.music_genre_list[0].music_genre.music_genre_name}\r\n                    </li> */}\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Explicit</strong>:{track.explicit === 0 ?\"No\":\"Yes\"}\r\n                    </li>\r\n                    {/* <li className=\"list-group-item\">\r\n                        <strong>Year</strong>:<Moment> format=\"MM-DD-YYYY\"{track.first_release_date}</Moment>\r\n                    </li> */}\r\n\r\n                </ul>\r\n                </React.Fragment>\r\n            )\r\n                \r\n            \r\n        }  \r\n    }\r\n}\r\nexport default Lyrics;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/layouts/navbar';\nimport Index from './components/layouts/Index';\nimport Lyrics from './components/tracks/lyrics';\n\nimport './App.css';\n\nimport {Provider} from \"./context\";\nclass App extends React.Component {\n  render(){\n    return (\n      <Provider>\n      <Router>\n        <React.Fragment>\n            <Navbar/>\n            <div className=\"container\">\n              \n              <Switch>\n                  <Route exact path=\"/\" component={Index}/>\n        \n                  <Route exact path=\"/lyrics/track/:id\" component={Lyrics}/>\n                  \n              </Switch>\n            </div>\n        </React.Fragment>\n      </Router> \n      </Provider>\n  );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}